#!/usr/bin/env node
var log = require("../tasks/utils/log");
var helper = require("../tasks/utils/config-helper");
//
//global.times = [];
//
//function logEnd(){
//    global.end = new Date();
//    console.log('Exec Time : ', timeDifference(global.end,global.start) + 's');
//}
//function timeDifference(laterdate, earlierdate) {
//    var difference = laterdate.getTime() - earlierdate.getTime();
//    var secondsDifference = difference/1000;
//    global.times.push(secondsDifference)
//    return secondsDifference;
//}
function execTask(taskName, args){
    //global.start = new Date()
    helper.configCheck();
    var task = require("../tasks/" + taskName);
    var command = args.shift() || 'all';
    var options = {};
    if (command.charAt(0) == '-') {
        options.type = command.substr(1);
        options[options.type] = true;
        command = 'all'
    } else if (args.length >0 && args[0].charAt(0) == '-'){
        options.type = args[0].substr(1);
        options[options.type] = true;
    }
    if (task[command]){
        return task[command](options);//.then(logEnd);
    } else if (task['adhoc']){
        return task['adhoc'](command, options);//.then(logEnd);
    } else {
        help(task, taskName);
    }
}

function help(task, taskName){
    var args = [];
    for (var arg in task){
        if (arg!=='all' && arg!=='adhoc') args.push(arg);
    }
    var helpStr = (!args[0]) ? '' : 'or `caddy ' + taskName + ' ' +args[0] + '`';
    log.info([ taskName + " arguments: " + args.join(', '),
        "Usage: `caddy " + taskName + "` " + helpStr].join("\n"));
}

var commands = {
    new: function(args) {
        var createNewComponent = require("../tasks/new");
        var componentName = args.shift() || log.onError('Please choose a project name as an argument');
        createNewComponent(componentName).then(log.onSuccess, log.onError);
    },
    copy: function(args){
        execTask('copy', args)
    },
    build: function(args){
        execTask('build', args)
    },
    init: function(args){
        execTask('init', args)
    },
    serve: function(args){
        execTask('serve', args)
    },
    test: function(args){
        execTask('test', args)
    },
    bump: function(args){
        execTask('bump', args)
    },
    release: function(args){
        execTask('release', args)
    },
    clean: function(args){
        execTask('clean', args)
    },
    '--help': function() {
        help(commands, '')
    },
    '--version': function() {
        var pkg = require("../package.json");
        log.info(pkg.version);
    }
};

(function main() {
    var argv = process.argv.slice(1)
    if (!argv.length) return commands['--help']();
    var cwd =  argv.shift();
    var command = argv.shift();
    if (argv.length && argv[0].indexOf('--') === 0){
        argv=[]
    }
    commands[command] && commands[command](argv);
    !commands[command] && commands['--help']();
})();
